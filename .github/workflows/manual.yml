name: loss-tracker-ci

on:
  push:
    branches:
      - main  # Specify branches to trigger on

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server, client]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Specify a stable version of Node.js
          cache: 'npm'
          cache-dependency-path: ./${{ matrix.service }}/package-lock.json

      - name: Install Dependencies
        working-directory: ./${{ matrix.service }}
        run: |
          set -e  # Exit on error
          npm ci  # Use npm ci for clean install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --debug

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/arm64
          tags: |
            symlon/loss-tracker:${{ matrix.service }}
            symlon/loss-tracker:${{ matrix.service }}-cache
          cache-from: |
            type=registry,ref=symlon/loss-tracker:${{ matrix.service }}-cache
            type=registry,ref=symlon/loss-tracker:${{ matrix.service }}
          cache-to: type=registry,ref=symlon/loss-tracker:${{ matrix.service }}-cache,mode=max
          provenance: false

      - name: Build Client with Vite
        if: matrix.service == 'client'
        working-directory: ./client
        run: |
          set -e  # Exit on error
          npm install --save dotenv  # Install dotenv if not in package.json
          npx dotenv -e .env -- npx vite build  # Build the client

