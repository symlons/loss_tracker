name: loss-tracker-ci

on:
  push:
    branches:
      - redo  # Specify branches to trigger on

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server, client]

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and Cache Dependencies
      - name: Setup Node.js and Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '18'  # Use a stable Node.js version
          cache: 'npm'
          cache-dependency-path: ./${{ matrix.service }}/package-lock.json

      # Step 3: Install Dependencies
      - name: Install Dependencies
        working-directory: ./${{ matrix.service }}
        run: npm install  # Install dependencies

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      # Step 6: Build and Push Images with Custom Commands
      - name: Build and Push Image
        if: matrix.service == 'server'
        working-directory: ./server
        run: |
          docker buildx build --platform linux/arm64 --output type=docker -t symlon/loss-tracker:server .
          docker push symlon/loss-tracker:server

      - name: Install Vite and Build Client
        if: matrix.service == 'client'
        working-directory: ./client
        run: |
          export $(cat .env | xargs)  # Load environment variables
          export REACT_APP_SOCKET_HOST=${{ secrets.REACT_APP_SOCKET_HOST }}
          npx vite build  # Run the Vite build process for client

      - name: Build and Push Client Image
        if: matrix.service == 'client'
        working-directory: ./client
        run: |
          docker build --platform linux/arm64 -t symlon/loss-tracker:client -f dockerfile .
          docker push symlon/loss-tracker:client

