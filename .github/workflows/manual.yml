name: loss-tracker-ci
on:
  push:
    branches:
      - redo

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [server, client]
        include:
          - service: server
            path: ./server
          - service: client
            path: ./client
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Shallow clone for faster checkout

      - name: Setup Node.js and Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.path }}/package-lock.json

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}-

      - name: Install Dependencies
        working-directory: ${{ matrix.path }}
        run: npm install  # Uses clean install instead of npm install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Build and Push Server Image
        if: matrix.service == 'server'
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: symlon/loss-tracker:server
          platforms: linux/arm64

      - name: Build Client
        if: matrix.service == 'client'
        working-directory: ./client
        run: |
          export $(cat .env | xargs)
          export REACT_APP_SOCKET_HOST=${{ secrets.REACT_APP_SOCKET_HOST }}
          npx vite build --mode production

      - name: Build and Push Client Image
        if: matrix.service == 'client'
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: symlon/loss-tracker:client
          platforms: linux/arm64

      - name: Set up Kubeconfig
        if: matrix.service == 'client'
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          
      - name: Deploy to K3s
        if: matrix.service == 'client'
        run: |
          kubectl rollout restart deployment/client-deployment
          kubectl rollout restart deployment/client-deployment -n losstracker
          kubectl rollout status deployment/client-deployment -n losstracker 
