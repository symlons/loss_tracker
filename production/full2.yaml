---
# Traefik ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-config
  namespace: losstracker
data:
  traefik.yaml: |
    api:
      insecure: true  # Enables dashboard access on /dashboard (for debugging)
    entryPoints:
      web:
        address: ":80"
      websecure:
        address: ":443"
    providers:
      kubernetesCRD:
        ingressClass: traefik
        namespaces:
          - losstracker
      kubernetesIngress: {}  # Ensure Ingress objects are picked up
    log:
      level: DEBUG  # Useful for debugging
---
# Middleware to rewrite /api paths
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: rewriteapi
  namespace: losstracker
spec:
  replacePathRegex:
    regex: "^/api/(.*)"
    replacement: "/$1"
---
# Client Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loss-tracker-nginx-client 
  namespace: losstracker
spec:
  selector:
    matchLabels:
      app: loss-tracker-nginx-client
  replicas: 1
  template:
    metadata:
      labels:
        app: loss-tracker-nginx-client
    spec:
      containers:
        - image: symlon/loss-tracker:client
          imagePullPolicy: Always
          name: loss-tracker-nginx-client
          ports:
          - containerPort: 80
      imagePullSecrets:
        - name: regcred
---
# Client Service 
apiVersion: v1
kind: Service
metadata:
  name: loss-tracker-nginx-client
  namespace: losstracker
spec:
  selector:
    app: loss-tracker-nginx-client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
# Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loss-tracker-server
  namespace: losstracker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loss-tracker-server
  template:
    metadata:
      labels:
        app: loss-tracker-server
    spec:
      containers:
      - name: loss-tracker-server
        image: symlon/loss-tracker:server
        imagePullPolicy: Always
        ports: 
        - containerPort: 5005
        - containerPort: 3005
      imagePullSecrets:
        - name: regcred
---
# Server Service
apiVersion: v1
kind: Service
metadata:
  name: load-balancer-server
  namespace: losstracker
  labels:
    app: loss-tracker-server
spec:
  selector:
    app: loss-tracker-server
  ports: 
  - name: http
    port: 5005
    targetPort: 5005
    protocol: TCP 
  - name: socket
    port: 3005
    targetPort: 3005
    protocol: TCP
---
# Ingress for the Client  /
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-ingress
  namespace: losstracker
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: traefik
  rules:
    - host: mlstatstracker.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: loss-tracker-nginx-client
                port:
                  number: 80
---
# Ingress for /api/socket
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: socket-ingress
  namespace: losstracker
spec:
  ingressClassName: traefik
  rules:
    - host: mlstatstracker.org
      http:
        paths:
          - path: /api/socket
            pathType: Prefix
            backend:
              service:
                name: load-balancer-server
                port:
                  number: 5005
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: losstracker-api
  namespace: losstracker
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(`mlstatstracker.org`) && PathPrefix(`/api`)
      kind: Rule
      services:
        - name: load-balancer-server
          port: 5005
      middlewares:
        - name: rewriteapi # Reference to the middleware
---
# Traefik Service
apiVersion: v1
kind: Service
metadata:
  name: traefik
  namespace: losstracker
spec:
  selector:
    app.kubernetes.io/name: traefik
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
    - name: dashboard
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer  # or NodePort if you're not using a cloud provider

---
# Traefik Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  namespace: losstracker
  labels:
    app.kubernetes.io/name: traefik
spec:
  replicas: 1  # scale as needed 
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik
    spec:
      containers:
        - name: traefik
          image: traefik:v2.9
          args:
            - "--api.dashboard=true"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--providers.kubernetescrd"
            - "--providers.kubernetesingress"
            - "--api.insecure=true"
            - "--log.level=DEBUG"
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
